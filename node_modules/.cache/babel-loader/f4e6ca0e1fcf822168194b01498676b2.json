{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reskyppo\\\\react\\\\reactjs\\\\webreact\\\\src\\\\container\\\\pages\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport './BlogPost.css';\nimport Post from '../../../component/Post/Post';\nimport axios from 'axios';\nimport API from '../../../services';\n\nclass BlogPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: [],\n      formBlogPost: {\n        id: 1,\n        title: '',\n        body: '',\n        userId: 1\n      },\n      isUpdate: false\n    };\n\n    this.getPostAPI = () => {\n      API.getNewsBlog().then(result => {\n        this.setState({\n          post: result.data\n        });\n      });\n      axios.get('http://localhost:3004/posts?_sort=id&_order=desc').then(result => {});\n    };\n\n    this.putDataAPI = () => {\n      axios.put(`http://localhost:3004/posts/${this.state.formBlogPost.id}`, this.state.formBlogPost).then(res => {\n        console.log(res);\n        this.getPostAPI();\n        this.setState({\n          isUpdate: false,\n          formBlogPost: {\n            id: 1,\n            title: '',\n            body: '',\n            userId: 1\n          }\n        });\n      });\n    };\n\n    this.postDataAPI = () => {\n      axios.post('http://localhost:3004/posts', this.state.formBlogPost).then(res => {\n        console.log(res);\n        this.getPostAPI();\n        this.setState({\n          isUpdate: false,\n          formBlogPost: {\n            id: 1,\n            title: '',\n            body: '',\n            userId: 1\n          }\n        });\n      }, err => {\n        console.log('error', err);\n      });\n    };\n\n    this.handleUpdate = data => {\n      console.log(data);\n      this.setState({\n        isUpdate: true,\n        formBlogPost: data\n      });\n    };\n\n    this.handleRemove = data => {\n      axios.delete(`http://localhost:3004/posts/${data}`).then(() => {\n        this.getPostAPI();\n      });\n    };\n\n    this.handleFormChange = event => {\n      let formBlogPostNew = { ...this.state.formBlogPost\n      };\n      let timestamp = new Date().getTime();\n\n      if (!this.state.isUpdate) {\n        formBlogPostNew['id'] = timestamp;\n      }\n\n      formBlogPostNew[event.target.name] = event.target.value;\n      this.setState({\n        formBlogPost: formBlogPostNew\n      }, () => {\n        console.log('value form blogpost', this.state.formBlogPost);\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (this.state.isUpdate) {\n        this.putDataAPI();\n      } else {\n        this.postDataAPI();\n      }\n    };\n\n    this.handleDetail = id => {\n      this.props.history.push(`/detail-post/${id}`);\n    };\n  }\n\n  componentDidMount() {\n    this.getPostAPI();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"selection-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Blog Post\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-add-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"title\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.formBlogPost.title,\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"add title\",\n      onChange: this.handleFormChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"body content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.formBlogPost.body,\n      name: \"body\",\n      id: \"body\",\n      cols: \"30\",\n      rows: \"10\",\n      placeholder: \"add body content\",\n      onChange: this.handleFormChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \"Simpan\")), this.state.post.map(post => {\n      return /*#__PURE__*/React.createElement(Post, {\n        key: post.id,\n        data: post,\n        remove: this.handleRemove,\n        update: this.handleUpdate,\n        goDetail: this.handleDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 32\n        }\n      });\n    }));\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["D:/Reskyppo/react/reactjs/webreact/src/container/pages/BlogPost/BlogPost.jsx"],"names":["React","Component","Fragment","Post","axios","API","BlogPost","state","post","formBlogPost","id","title","body","userId","isUpdate","getPostAPI","getNewsBlog","then","result","setState","data","get","putDataAPI","put","res","console","log","postDataAPI","err","handleUpdate","handleRemove","delete","handleFormChange","event","formBlogPostNew","timestamp","Date","getTime","target","name","value","handleSubmit","handleDetail","props","history","push","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport './BlogPost.css'\r\nimport Post from '../../../component/Post/Post'\r\nimport axios from 'axios'\r\nimport API from '../../../services'\r\n\r\nclass BlogPost extends Component{\r\n    state = {\r\n        post: [],\r\n        formBlogPost: {\r\n            id    : 1,\r\n            title : '',\r\n            body  : '',\r\n            userId: 1\r\n        },\r\n        isUpdate: false\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getPostAPI()\r\n    }\r\n    \r\n    getPostAPI = () => {\r\n        API.getNewsBlog().then(result => {\r\n            this.setState({\r\n                post: result.data\r\n            })\r\n        })\r\n        axios.get('http://localhost:3004/posts?_sort=id&_order=desc')\r\n        .then((result) => {\r\n        })\r\n    }\r\n    \r\n    putDataAPI = () => {\r\n        axios.put(`http://localhost:3004/posts/${this.state.formBlogPost.id}`, this.state.formBlogPost)\r\n        .then((res) => {\r\n            console.log(res)\r\n            this.getPostAPI()\r\n            this.setState({\r\n                isUpdate: false,\r\n                formBlogPost: {\r\n                    id    : 1,\r\n                    title : '',\r\n                    body  : '',\r\n                    userId: 1\r\n                }\r\n            })\r\n        })\r\n    }\r\n        \r\n    postDataAPI = () =>{\r\n        axios.post('http://localhost:3004/posts', this.state.formBlogPost)\r\n        .then((res) =>{\r\n            console.log(res);\r\n            this.getPostAPI();\r\n            this.setState({\r\n                isUpdate: false,\r\n                formBlogPost: {\r\n                    id    : 1,\r\n                    title : '',\r\n                    body  : '',\r\n                    userId: 1\r\n                }\r\n            })\r\n        }, (err) => {\r\n            console.log('error', err);\r\n        })\r\n    }\r\n    \r\n    handleUpdate = (data) => {\r\n            console.log(data);\r\n        this.setState({\r\n            isUpdate    : true,\r\n            formBlogPost: data\r\n        })\r\n    }\r\n\r\n    handleRemove = (data) => {\r\n        axios.delete(`http://localhost:3004/posts/${data}`)\r\n        .then(() => {\r\n            this.getPostAPI()\r\n        })\r\n    }\r\n\r\n    handleFormChange = (event) => {\r\n        let formBlogPostNew = {...this.state.formBlogPost};\r\n        let timestamp       = new Date().getTime();\r\n        if(!this.state.isUpdate){\r\n            formBlogPostNew['id'] = timestamp;\r\n        }\r\n        formBlogPostNew[event.target.name] = event.target.value;\r\n        this.setState({\r\n            formBlogPost : formBlogPostNew\r\n        }, () => {\r\n            console.log('value form blogpost', this.state.formBlogPost)\r\n        })\r\n    }\r\n    \r\n    handleSubmit = () => {\r\n        if (this.state.isUpdate){\r\n            this.putDataAPI()\r\n        }else{\r\n            this.postDataAPI()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleDetail = (id) => {\r\n        this.props.history.push(`/detail-post/${id}`)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <p     className = 'selection-title'>Blog Post</p>\r\n                <div   className = \"form-add-post\">\r\n                <label htmlFor   = \"title\">title</label>\r\n                <input value     = {this.state.formBlogPost.title} type = \"text\" name = \"title\" placeholder = \"add title\"  onChange = {this.handleFormChange}/>\r\n                <label htmlFor   = \"body\">body content</label>\r\n                    <textarea \r\n                            value       = {this.state.formBlogPost.body}\r\n                            name        = \"body\" id            = \"body\" cols = \"30\" rows = \"10\"\r\n                            placeholder = \"add body content\"\r\n                            onChange    = {this.handleFormChange}></textarea>\r\n                    <button className   = \"btn-submit\" onClick = {this.handleSubmit} >Simpan</button>\r\n                </div>\r\n                {\r\n                  this.state.post.map(post => {\r\n                        return <Post \r\n                        key      = {post.id}\r\n                        data     = {post}\r\n                        remove   = {this.handleRemove}\r\n                        update   = {this.handleUpdate}\r\n                        goDetail = {this.handleDetail}/>\r\n                    })\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}