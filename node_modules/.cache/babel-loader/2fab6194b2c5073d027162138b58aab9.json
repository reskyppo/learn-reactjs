{"ast":null,"code":"import axios from 'axios';\n\nconst Post = (path, root, data) => {\n  const promise = new Promise((resolve, reject) => {\n    axios.post(`${root ? onlineRoot : rootPath}/${path}`, data).then(result => {\n      resolve(result);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n}; // POST\n\n\nconst postNewsBlog = data => Post('posts', false, data); // GET\n\n\nconst getNewsBlog = () => Get('posts?_sort=id&_order=desc', false);\n\nconst getComments = () => Get('comments', true);\n\nconst API = {\n  getNewsBlog,\n  getComments,\n  postNewsBlog\n};\nexport default API;","map":{"version":3,"sources":["D:/Reskyppo/react/reactjs/webreact/src/services/index.js"],"names":["axios","Post","path","root","data","promise","Promise","resolve","reject","post","onlineRoot","rootPath","then","result","err","postNewsBlog","getNewsBlog","Get","getComments","API"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAKA,MAAMC,IAAI,GAAG,CAACC,IAAD,EAAMC,IAAN,EAAWC,IAAX,KAAoB;AAC7B,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CR,IAAAA,KAAK,CAACS,IAAN,CAAY,GAAEN,IAAI,GAAGO,UAAH,GAAgBC,QAAS,IAAGT,IAAK,EAAnD,EAAsDE,IAAtD,EACCQ,IADD,CACOC,MAAD,IAAW;AACbN,MAAAA,OAAO,CAACM,MAAD,CAAP;AACH,KAHD,EAGIC,GAAD,IAAS;AACRN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KALD;AAMH,GAPe,CAAhB;AAQA,SAAOT,OAAP;AACH,CAVD,C,CAYA;;;AACA,MAAMU,YAAY,GAAIX,IAAD,IAAUH,IAAI,CAAC,OAAD,EAAU,KAAV,EAAiBG,IAAjB,CAAnC,C,CACA;;;AACA,MAAMY,WAAW,GAAG,MAAMC,GAAG,CAAC,4BAAD,EAA8B,KAA9B,CAA7B;;AACA,MAAMC,WAAW,GAAG,MAAMD,GAAG,CAAC,UAAD,EAAa,IAAb,CAA7B;;AAEA,MAAME,GAAG,GAAG;AACRH,EAAAA,WADQ;AAERE,EAAAA,WAFQ;AAGRH,EAAAA;AAHQ,CAAZ;AAMA,eAAeI,GAAf","sourcesContent":["import axios from 'axios'\r\n\r\n\r\n\r\n\r\nconst Post = (path,root,data) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.post(`${root ? onlineRoot : rootPath}/${path}`, data)\r\n        .then((result) =>{\r\n            resolve(result);\r\n        }, (err) => {\r\n            reject(err);\r\n        })\r\n    })\r\n    return promise\r\n}\r\n\r\n// POST\r\nconst postNewsBlog = (data) => Post('posts', false, data)\r\n// GET\r\nconst getNewsBlog = () => Get('posts?_sort=id&_order=desc',false);\r\nconst getComments = () => Get('comments', true);\r\n\r\nconst API = {\r\n    getNewsBlog,\r\n    getComments, \r\n    postNewsBlog\r\n}\r\n\r\nexport default API;"]},"metadata":{},"sourceType":"module"}