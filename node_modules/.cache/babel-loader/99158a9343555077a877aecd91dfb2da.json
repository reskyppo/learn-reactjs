{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reskyppo\\\\react\\\\reactjs\\\\webreact\\\\src\\\\container\\\\pages\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport './BlogPost.css';\nimport Post from '../../../component/Post/Post';\nimport axios from 'axios';\n\nclass BlogPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: [],\n      formBlogPost: {\n        id: 1,\n        title: '',\n        body: '',\n        userId: 1\n      },\n      isUpdate: false\n    };\n\n    this.getPostAPI = () => {\n      axios.get('http://localhost:3004/posts?_sort=id&_order=desc').then(result => {\n        this.setState({\n          post: result.data\n        });\n      });\n    };\n\n    this.handleRemove = data => {\n      axios.delete(`http://localhost:3004/posts/${data}`).then(() => {\n        this.getPostAPI();\n      });\n    };\n\n    this.handleFormChange = event => {\n      let formBlogPostNew = { ...this.state.formBlogPost\n      };\n      let timestamp = new Date().getTime();\n\n      if (!this.state.isUpdate) {\n        formBlogPostNew['id'] = timestamp;\n      }\n\n      formBlogPostNew[event.target.name] = event.target.value;\n      this.setState({\n        formBlogPost: formBlogPostNew\n      }, () => {\n        console.log('value form blogpost', this.state.formBlogPost);\n      });\n    };\n\n    this.handleUpdate = data => {\n      console.log(data);\n      this.setState({\n        isUpdate: true,\n        formBlogPost: data\n      });\n    };\n\n    this.putDataAPI = () => {\n      axios.put(`http://localhost:3004/posts/${this.state.formBlogPost.id}`, this.state.formBlogPost).then(res => {\n        console.log(res);\n        this.getPostAPI();\n        this.setState({\n          isUpdate: false,\n          formBlogPost: {\n            id: 1,\n            title: '',\n            body: '',\n            userId: 1\n          }\n        });\n      });\n    };\n\n    this.postDataAPI = () => {\n      axios.post('http://localhost:3004/posts', this.state.formBlogPost).then(res => {\n        console.log(res);\n        this.getPostAPI();\n        this.setState({\n          isUpdate: false,\n          formBlogPost: {\n            id: 1,\n            title: '',\n            body: '',\n            userId: 1\n          }\n        });\n      }, err => {\n        console.log('error', err);\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (this.state.isUpdate) {\n        this.putDataAPI();\n      } else {\n        this.postDataAPI();\n      }\n    };\n\n    this.handleDetail = () => {};\n  }\n\n  componentDidMount() {\n    this.getPostAPI();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"selection-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Blog Post\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-add-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"title\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.formBlogPost.title,\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"add title\",\n      onChange: this.handleFormChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"body content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.formBlogPost.body,\n      name: \"body\",\n      id: \"body\",\n      cols: \"30\",\n      rows: \"10\",\n      placeholder: \"add body content\",\n      onChange: this.handleFormChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"Simpan\")), this.state.post.map(post => {\n      return;\n\n      /*#__PURE__*/\n      React.createElement(Post, {\n        key: post.id,\n        data: post,\n        remove: this.handleRemove,\n        update: this.handleUpdate,\n        goDetail: this.handleDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      });\n    }));\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["D:/Reskyppo/react/reactjs/webreact/src/container/pages/BlogPost/BlogPost.jsx"],"names":["React","Component","Fragment","Post","axios","BlogPost","state","post","formBlogPost","id","title","body","userId","isUpdate","getPostAPI","get","then","result","setState","data","handleRemove","delete","handleFormChange","event","formBlogPostNew","timestamp","Date","getTime","target","name","value","console","log","handleUpdate","putDataAPI","put","res","postDataAPI","err","handleSubmit","handleDetail","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport './BlogPost.css'\r\nimport Post from '../../../component/Post/Post'\r\nimport axios from 'axios'\r\n\r\nclass BlogPost extends Component{\r\n    state = {\r\n        post: [],\r\n        formBlogPost: {\r\n            id:1,\r\n            title: '',\r\n            body: '',\r\n            userId: 1\r\n        },\r\n        isUpdate: false\r\n    }\r\n\r\n    getPostAPI = () => {\r\n        axios.get('http://localhost:3004/posts?_sort=id&_order=desc')\r\n        .then((result) => {\r\n            this.setState({\r\n                post: result.data\r\n            })\r\n        })\r\n    }\r\n    handleRemove = (data) => {\r\n        axios.delete(`http://localhost:3004/posts/${data}`)\r\n        .then(() => {\r\n            this.getPostAPI()\r\n        })\r\n    }\r\n    \r\n    handleFormChange = (event) => {\r\n        let formBlogPostNew = {...this.state.formBlogPost};\r\n        let timestamp = new Date().getTime();\r\n        if(!this.state.isUpdate){\r\n            formBlogPostNew['id'] = timestamp;\r\n        }\r\n        formBlogPostNew[event.target.name] = event.target.value;\r\n        this.setState({\r\n            formBlogPost : formBlogPostNew\r\n        }, () => {\r\n            console.log('value form blogpost', this.state.formBlogPost)\r\n        })\r\n    }\r\n    \r\n    handleUpdate = (data) => {\r\n        console.log(data);\r\n        this.setState({\r\n            isUpdate : true,\r\n            formBlogPost : data\r\n        })\r\n    }\r\n\r\n    putDataAPI = () => {\r\n        axios.put(`http://localhost:3004/posts/${this.state.formBlogPost.id}`, this.state.formBlogPost)\r\n        .then((res) => {\r\n            console.log(res)\r\n            this.getPostAPI()\r\n            this.setState({\r\n                isUpdate: false,\r\n                formBlogPost: {\r\n                    id:1,\r\n                    title: '',\r\n                    body: '',\r\n                    userId: 1\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n    postDataAPI = () =>{\r\n        axios.post('http://localhost:3004/posts', this.state.formBlogPost)\r\n        .then((res) =>{\r\n            console.log(res);\r\n            this.getPostAPI();\r\n            this.setState({\r\n                isUpdate: false,\r\n                formBlogPost: {\r\n                    id:1,\r\n                    title: '',\r\n                    body: '',\r\n                    userId: 1\r\n                }\r\n            })\r\n        }, (err) => {\r\n            console.log('error', err);\r\n        })\r\n    }\r\n    \r\n    handleSubmit = () => {\r\n        if (this.state.isUpdate){\r\n            this.putDataAPI()\r\n        }else{\r\n            this.postDataAPI()\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getPostAPI()\r\n    }\r\n\r\n    handleDetail = () => {\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <p className = 'selection-title'>Blog Post</p>\r\n                <div className=\"form-add-post\">\r\n                    <label htmlFor=\"title\">title</label>\r\n                    <input value = {this.state.formBlogPost.title} type=\"text\" name = \"title\" placeholder = \"add title\"  onChange = {this.handleFormChange}/>\r\n                    <label htmlFor=\"body\">body content</label>\r\n                    <textarea \r\n                    value = {this.state.formBlogPost.body} \r\n                    name=\"body\" id=\"body\" cols=\"30\" rows=\"10\" \r\n                    placeholder = \"add body content\" onChange = {this.handleFormChange}></textarea>\r\n                    <button className=\"btn-submit\" onClick = {this.handleSubmit} >Simpan</button>\r\n                </div>\r\n                {\r\n                  this.state.post.map(post => {\r\n                        return \r\n                        <Post \r\n                        key      = {post.id}\r\n                        data     = {post}\r\n                        remove   = {this.handleRemove}\r\n                        update   = {this.handleUpdate}\r\n                        goDetail = {this.handleDetail}/>\r\n                    })\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}