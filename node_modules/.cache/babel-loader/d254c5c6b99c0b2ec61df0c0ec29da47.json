{"ast":null,"code":"import axios from 'axios';\nconst rootPath = 'http://localhost:3004';\nconst onlineRoot = 'https://jsonplaceholder.typicode.com';\n\nconst Get = (path, root) => {\n  const promise = new Promise((resolve, reject) => {\n    axios.get(`${root ? onlineRoot : rootPath}/${path}`).then(result => {\n      resolve(result.data);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n};\n\nconst Post = (path, root, data) => {\n  const promise = new Promise((resolve, reject) => {});\n};\n\nconst getNewsBlog = () => Get('posts?_sort=id&_order=desc', false);\n\nconst getComments = () => Get('comments', true);\n\nconst API = {\n  getNewsBlog,\n  getComments\n};\nexport default API;","map":{"version":3,"sources":["D:/Reskyppo/react/reactjs/webreact/src/services/index.js"],"names":["axios","rootPath","onlineRoot","Get","path","root","promise","Promise","resolve","reject","get","then","result","data","err","Post","getNewsBlog","getComments","API"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,MAAMC,UAAU,GAAG,sCAAnB;;AAEA,MAAMC,GAAG,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAe;AACvB,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CT,IAAAA,KAAK,CAACU,GAAN,CAAW,GAAEL,IAAI,GAAGH,UAAH,GAAgBD,QAAS,IAAGG,IAAK,EAAlD,EACCO,IADD,CACOC,MAAD,IAAY;AACVJ,MAAAA,OAAO,CAACI,MAAM,CAACC,IAAR,CAAP;AACH,KAHL,EAGQC,GAAD,IAAQ;AACPL,MAAAA,MAAM,CAACK,GAAD,CAAN;AACP,KALD;AAMH,GAPe,CAAhB;AAQA,SAAOR,OAAP;AACH,CAVD;;AAYA,MAAMS,IAAI,GAAG,CAACX,IAAD,EAAMC,IAAN,EAAWQ,IAAX,KAAoB;AAC7B,QAAMP,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB,CAAE,CAAnC,CAAhB;AACH,CAFD;;AAIA,MAAMO,WAAW,GAAG,MAAMb,GAAG,CAAC,4BAAD,EAA8B,KAA9B,CAA7B;;AACA,MAAMc,WAAW,GAAG,MAAMd,GAAG,CAAC,UAAD,EAAa,IAAb,CAA7B;;AAEA,MAAMe,GAAG,GAAG;AACRF,EAAAA,WADQ;AAERC,EAAAA;AAFQ,CAAZ;AAKA,eAAeC,GAAf","sourcesContent":["import axios from 'axios'\r\n\r\nconst rootPath = 'http://localhost:3004';\r\nconst onlineRoot = 'https://jsonplaceholder.typicode.com';\r\n\r\nconst Get = (path, root) =>{\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.get(`${root ? onlineRoot : rootPath}/${path}`)\r\n        .then((result) => {\r\n                resolve(result.data);\r\n            }, (err) =>{\r\n                reject(err);\r\n        })\r\n    })\r\n    return promise\r\n}\r\n\r\nconst Post = (path,root,data) => {\r\n    const promise = new Promise((resolve, reject) => {})\r\n}\r\n\r\nconst getNewsBlog = () => Get('posts?_sort=id&_order=desc',false);\r\nconst getComments = () => Get('comments', true);\r\n\r\nconst API = {\r\n    getNewsBlog,\r\n    getComments\r\n}\r\n\r\nexport default API;"]},"metadata":{},"sourceType":"module"}